name: Test

on:
  push:
    branches:
    - master
  pull_request:
    types:
    - opened
    - synchronize

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        go-version:
        - 1.19.x
        - 1.20.x
        os:
        - ubuntu-latest
        - macos-latest
        - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
    - name: Cache
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Build
      run: go install .
    - name: Lint
      id: lint
      uses: golangci/golangci-lint-action@v3.4.0
      with:
        version: v1.52
        skip-pkg-cache: true
        skip-build-cache: true
      continue-on-error: true
    - name: Test
      run: go test -v -count 1 -coverprofile coverage.out ./...
    - name: Gcov to lcov
      uses: jandelgado/gcov2lcov-action@v1.0.9
      if: "matrix.os == 'ubuntu-latest'"
    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: coverage.lcov
      if: "matrix.os == 'ubuntu-latest'"
    - name: Lint result
      if: steps.lint.outcome != 'success'
      run: exit 1
